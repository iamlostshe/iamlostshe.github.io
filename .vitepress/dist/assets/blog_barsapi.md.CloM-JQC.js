import{_ as e,c as r,o as t,ae as p}from"./chunks/framework.BD_Yrv4e.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"blog/barsapi.md","filePath":"blog/barsapi.md"}'),s={name:"blog/barsapi.md"};function o(i,a,l,n,d,_){return t(),r("div",null,[...a[0]||(a[0]=[p('<p>многие знают меня по проекту <a href="https://github.com/iamlostshe/pars-diary" target="_blank" rel="noreferrer">pars-diary</a>, сегодня речь пойдёт именно о нём.</p><p>на данный момент проект является убыточным. я потратил много средств на его содержание.</p><p>но сейчас, у меня есть план монетезации бота.</p><p>чтобы монетезировать какой-либо продукт, нужно подготовить его:</p><ul><li>разобраться с архитектурой.</li><li>навести красоту по коду (т.к. проект open source).</li></ul><p>так сказать подготовить &quot;фундамент&quot;, на который в будущем будет накладываться всё остальное.</p><p>первым шагом в плане &quot;подготовки почвы&quot; числится библиотека, для работы с <code>api</code> дневников - <a href="https://github.com/iamlostshe/bars-api" target="_blank" rel="noreferrer">bars-api</a>.</p><p>почему было решено вынести работу с <code>api</code> в отдельную библиотеку?</p><p>во первых, это конечно модульность решения, можно спокойно редактировать библиотеку, не зависимо от pars-diary, а потом просто обновить зависимости в pyproject.toml.</p><p>во вторых, хотел форкнуть уже существующую библиотеку BarsAPI (на данный момент от изначальной библиотеки ничего не осталось).</p><p>начал, с оптимизации кодовой базы библиотеки. на удивление, там было много сомнительных решений.</p><p>добавил пару служебных изменений (.gitignore, .vscode, ruff).</p><p>и самое интересное, что я хотел бы выделить: сделал <a href="https://bars-api.readthedocs.io/ru/latest/" target="_blank" rel="noreferrer">документацию к библиотеке</a>.</p><p>обычно разработчики не запариваются и делают документации на морально устаревших файлах формата .rst, однако, я решил писать на .md. а это значило, что мне придётся разобраться с vitepress.</p><p>в скором времени еще планирую привести JSON ответы библиотеки в python-объекты, чтобы работали подсказки IDE. Да и вообще, это выглядит лучше, органичнее, что-ли.</p><p>user_data[&quot;name&quot;] -&gt; user_data.name</p><p><a href="https://bars-api.readthedocs.io/ru/latest/" target="_blank" rel="noreferrer">документация</a>, как и исходный код открыта, для всех желающих:</p><p><a href="https://bars-api.readthedocs.io/ru/latest/" target="_blank" rel="noreferrer">https://bars-api.readthedocs.io/ru/latest/</a></p>',18)])])}const h=e(s,[["render",o]]);export{u as __pageData,h as default};
